--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.13 (Ubuntu 15.13-1.pgdg22.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA public;


--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON SCHEMA public IS 'standard public schema';


--
-- Name: exercise_kind; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE public.exercise_kind AS ENUM (
    'fill_blank',
    'sentence_transform',
    'multiple_choice',
    'open'
);


--
-- Name: section_type; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE public.section_type AS ENUM (
    'backstory',
    'apply',
    'understand',
    'extra_tip',
    'common_mistake',
    'practice',
    'culture_note',
    'pinned_comment'
);


--
-- Name: trg_touch_updated_at(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.trg_touch_updated_at() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
  new.updated_at := now();
  return new;
end;
$$;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: comprehension_questions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.comprehension_questions (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    lesson_id uuid NOT NULL,
    prompt text NOT NULL,
    answer_key jsonb,
    sort_order integer DEFAULT 0,
    prompt_th text,
    answer_key_th jsonb,
    options jsonb DEFAULT '[]'::jsonb
);


--
-- Name: enum_labels; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.enum_labels (
    enum_value text NOT NULL,
    lang_code text NOT NULL,
    label text NOT NULL
);


--
-- Name: lesson_phrases; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.lesson_phrases (
    lesson_id uuid NOT NULL,
    phrase_id uuid NOT NULL,
    sort_order integer DEFAULT 0
);


--
-- Name: lesson_sections; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.lesson_sections (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    lesson_id uuid NOT NULL,
    type public.section_type NOT NULL,
    content text NOT NULL,
    audio_url text,
    sort_order integer DEFAULT 0,
    content_th text,
    content_md text
);


--
-- Name: lesson_tags; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.lesson_tags (
    lesson_id uuid NOT NULL,
    tag_id uuid NOT NULL
);


--
-- Name: lessons; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.lessons (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    title text,
    title_th text,
    subtitle text,
    subtitle_th text,
    stage text,
    level smallint,
    image_url text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    lesson_order integer,
    focus text,
    focus_th text,
    backstory text,
    backstory_th text
);


--
-- Name: TABLE lessons; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.lessons IS 'General Lesson Info';


--
-- Name: phrases; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.phrases (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    phrase text NOT NULL,
    translation text NOT NULL,
    notes text,
    phrase_th text,
    notes_th text
);


--
-- Name: practice_exercises; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.practice_exercises (
    id bigint NOT NULL,
    lesson_id uuid NOT NULL,
    kind public.exercise_kind NOT NULL,
    prompt_md text,
    options jsonb NOT NULL,
    answer_key jsonb,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    sort_order integer NOT NULL,
    items jsonb,
    title text,
    paragraph text
);


--
-- Name: practice_exercises_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.practice_exercises_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: practice_exercises_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.practice_exercises_id_seq OWNED BY public.practice_exercises.id;


--
-- Name: practice_exercises_sort_order_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.practice_exercises ALTER COLUMN sort_order ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.practice_exercises_sort_order_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: practice_results; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.practice_results (
    id bigint NOT NULL,
    exercise_id bigint NOT NULL,
    user_id uuid NOT NULL,
    score numeric(5,2),
    raw_answers jsonb,
    checked_at timestamp with time zone DEFAULT now() NOT NULL
);


--
-- Name: practice_results_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.practice_results_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: practice_results_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.practice_results_id_seq OWNED BY public.practice_results.id;


--
-- Name: tags; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.tags (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    name text NOT NULL
);


--
-- Name: transcript_lines; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.transcript_lines (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    lesson_id uuid NOT NULL,
    sort_order integer NOT NULL,
    speaker text,
    line_text text NOT NULL,
    start_sec numeric(6,2),
    end_sec numeric(6,2),
    audio_url text,
    line_text_th text
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.users (
    username character varying(50) NOT NULL,
    email character varying(100) NOT NULL,
    password_hash character varying(255) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    is_admin boolean DEFAULT false
);


--
-- Name: COLUMN users.is_admin; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.users.is_admin IS 'admin column';


--
-- Name: practice_exercises id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_exercises ALTER COLUMN id SET DEFAULT nextval('public.practice_exercises_id_seq'::regclass);


--
-- Name: practice_results id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_results ALTER COLUMN id SET DEFAULT nextval('public.practice_results_id_seq'::regclass);


--
-- Name: comprehension_questions compq_lesson_sort_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.comprehension_questions
    ADD CONSTRAINT compq_lesson_sort_unique UNIQUE (lesson_id, sort_order);


--
-- Name: comprehension_questions comprehension_questions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.comprehension_questions
    ADD CONSTRAINT comprehension_questions_pkey PRIMARY KEY (id);


--
-- Name: enum_labels enum_labels_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.enum_labels
    ADD CONSTRAINT enum_labels_pkey PRIMARY KEY (enum_value, lang_code);


--
-- Name: lesson_phrases lesson_phrases_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_phrases
    ADD CONSTRAINT lesson_phrases_pkey PRIMARY KEY (lesson_id, phrase_id);


--
-- Name: lesson_phrases lesson_phrases_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_phrases
    ADD CONSTRAINT lesson_phrases_unique UNIQUE (lesson_id, phrase_id);


--
-- Name: lesson_sections lesson_sections_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_sections
    ADD CONSTRAINT lesson_sections_pkey PRIMARY KEY (id);


--
-- Name: lesson_tags lesson_tags_lesson_tag_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_tags
    ADD CONSTRAINT lesson_tags_lesson_tag_unique UNIQUE (lesson_id, tag_id);


--
-- Name: lesson_tags lesson_tags_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_tags
    ADD CONSTRAINT lesson_tags_pkey PRIMARY KEY (lesson_id, tag_id);


--
-- Name: lessons lessons_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lessons
    ADD CONSTRAINT lessons_pkey PRIMARY KEY (id);


--
-- Name: lessons lessons_stage_level_order_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lessons
    ADD CONSTRAINT lessons_stage_level_order_unique UNIQUE (stage, level, lesson_order);


--
-- Name: practice_results one_attempt_per_user; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_results
    ADD CONSTRAINT one_attempt_per_user UNIQUE (exercise_id, user_id);


--
-- Name: phrases phrases_phrase_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.phrases
    ADD CONSTRAINT phrases_phrase_unique UNIQUE (phrase);


--
-- Name: phrases phrases_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.phrases
    ADD CONSTRAINT phrases_pkey PRIMARY KEY (id);


--
-- Name: practice_exercises practice_exercises_lesson_kind_sort_order_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_exercises
    ADD CONSTRAINT practice_exercises_lesson_kind_sort_order_key UNIQUE (lesson_id, kind, sort_order);


--
-- Name: practice_exercises practice_exercises_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_exercises
    ADD CONSTRAINT practice_exercises_pkey PRIMARY KEY (id);


--
-- Name: practice_results practice_results_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_results
    ADD CONSTRAINT practice_results_pkey PRIMARY KEY (id);


--
-- Name: lesson_sections sections_lesson_type_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_sections
    ADD CONSTRAINT sections_lesson_type_unique UNIQUE (lesson_id, type);


--
-- Name: tags tags_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_name_key UNIQUE (name);


--
-- Name: tags tags_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);


--
-- Name: transcript_lines transcript_lines_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.transcript_lines
    ADD CONSTRAINT transcript_lines_pkey PRIMARY KEY (id);


--
-- Name: transcript_lines transcript_lines_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.transcript_lines
    ADD CONSTRAINT transcript_lines_unique UNIQUE (lesson_id, sort_order);


--
-- Name: users users_email_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_key UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users users_username_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_username_key UNIQUE (username);


--
-- Name: idx_comp_q_lesson_order; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_comp_q_lesson_order ON public.comprehension_questions USING btree (lesson_id, sort_order);


--
-- Name: idx_lesson_phrases_order; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_lesson_phrases_order ON public.lesson_phrases USING btree (lesson_id, sort_order);


--
-- Name: idx_section_lesson_order; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_section_lesson_order ON public.lesson_sections USING btree (lesson_id, sort_order);


--
-- Name: idx_transcript_lesson_order; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_transcript_lesson_order ON public.transcript_lines USING btree (lesson_id, sort_order);


--
-- Name: practice_exercises touch_practice_exercises; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER touch_practice_exercises BEFORE UPDATE ON public.practice_exercises FOR EACH ROW EXECUTE FUNCTION public.trg_touch_updated_at();


--
-- Name: comprehension_questions comprehension_questions_lesson_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.comprehension_questions
    ADD CONSTRAINT comprehension_questions_lesson_id_fkey FOREIGN KEY (lesson_id) REFERENCES public.lessons(id) ON DELETE CASCADE;


--
-- Name: lesson_phrases lesson_phrases_lesson_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_phrases
    ADD CONSTRAINT lesson_phrases_lesson_id_fkey FOREIGN KEY (lesson_id) REFERENCES public.lessons(id) ON DELETE CASCADE;


--
-- Name: lesson_phrases lesson_phrases_phrase_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_phrases
    ADD CONSTRAINT lesson_phrases_phrase_id_fkey FOREIGN KEY (phrase_id) REFERENCES public.phrases(id) ON DELETE CASCADE;


--
-- Name: lesson_sections lesson_sections_lesson_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_sections
    ADD CONSTRAINT lesson_sections_lesson_id_fkey FOREIGN KEY (lesson_id) REFERENCES public.lessons(id) ON DELETE CASCADE;


--
-- Name: lesson_tags lesson_tags_lesson_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_tags
    ADD CONSTRAINT lesson_tags_lesson_id_fkey FOREIGN KEY (lesson_id) REFERENCES public.lessons(id) ON DELETE CASCADE;


--
-- Name: lesson_tags lesson_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.lesson_tags
    ADD CONSTRAINT lesson_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tags(id) ON DELETE CASCADE;


--
-- Name: practice_exercises practice_exercises_lesson_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_exercises
    ADD CONSTRAINT practice_exercises_lesson_id_fkey FOREIGN KEY (lesson_id) REFERENCES public.lessons(id);


--
-- Name: practice_results practice_results_exercise_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_results
    ADD CONSTRAINT practice_results_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.practice_exercises(id) ON DELETE CASCADE;


--
-- Name: practice_results practice_results_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.practice_results
    ADD CONSTRAINT practice_results_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id);


--
-- Name: transcript_lines transcript_lines_lesson_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.transcript_lines
    ADD CONSTRAINT transcript_lines_lesson_id_fkey FOREIGN KEY (lesson_id) REFERENCES public.lessons(id) ON DELETE CASCADE;


--
-- Name: users Allow user to create a record; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Allow user to create a record" ON public.users FOR INSERT TO authenticated WITH CHECK ((id = auth.uid()));


--
-- Name: users Allow user to update their own record; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Allow user to update their own record" ON public.users FOR UPDATE TO authenticated USING ((auth.uid() = id)) WITH CHECK ((auth.uid() = id));


--
-- Name: users Enable delete for users based on user_id; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Enable delete for users based on user_id" ON public.users FOR DELETE TO authenticated USING ((( SELECT auth.uid() AS uid) = id));


--
-- Name: users Enable insert for authenticated users only; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Enable insert for authenticated users only" ON public.users FOR INSERT TO authenticated WITH CHECK (true);


--
-- Name: users Enable read access for user's own record; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Enable read access for user's own record" ON public.users FOR SELECT TO authenticated USING ((auth.uid() = id));


--
-- Name: lessons Public can read lessons; Type: POLICY; Schema: public; Owner: -
--

CREATE POLICY "Public can read lessons" ON public.lessons FOR SELECT USING (true);


--
-- Name: lessons; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.lessons ENABLE ROW LEVEL SECURITY;

--
-- Name: users; Type: ROW SECURITY; Schema: public; Owner: -
--

ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;

--
-- PostgreSQL database dump complete
--

